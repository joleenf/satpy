sensor_name: visir/abi

modifiers:
  rayleigh_corrected_crefl:
    compositor: !!python/name:satpy.composites.viirs.ReflectanceCorrector
    dem_filename: CMGDEM.hdf
    optional_prerequisites:
    - name: satellite_azimuth_angle
    - name: satellite_zenith_angle
    - name: solar_azimuth_angle
    - name: solar_zenith_angle

  rayleigh_corrected_500m:
    compositor: !!python/name:satpy.composites.PSPRayleighReflectance
    atmosphere: midlatitude summer
    aerosol_type: marine_tropical_aerosol
    prerequisites:
    - name: C02
      modifiers: [effective_solar_pathlength_corrected]
    optional_prerequisites:
    - satellite_azimuth_angle
    - satellite_zenith_angle
    - solar_azimuth_angle
    - solar_zenith_angle

composites:
  green_crefl:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    # FUTURE: Set a wavelength...see what happens. Dependency finding
    #         probably wouldn't work.
    prerequisites:
    # should we be using the most corrected or least corrected inputs?
    - name: C01
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    - name: C03
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    standard_name: toa_bidirection_reflectance

  green_raw:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    # FUTURE: Set a wavelength...see what happens. Dependency finding
    #         probably wouldn't work.
    prerequisites:
    # should we be using the most corrected or least corrected inputs?
    - name: C01
      modifiers: [sunz_corrected]
    - name: C02
      modifiers: [sunz_corrected]
    - name: C03
      modifiers: [sunz_corrected]
    standard_name: toa_bidirection_reflectance

  green:
    compositor: !!python/name:satpy.composites.abi.SimulatedGreen
    # FUTURE: Set a wavelength...see what happens. Dependency finding
    #         probably wouldn't work.
    prerequisites:
    # should we be using the most corrected or least corrected inputs?
    - name: C01
      modifiers: [sunz_corrected, rayleigh_corrected]
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected]
    - name: C03
      modifiers: [sunz_corrected]
    standard_name: toa_bidirection_reflectance

  true_color_crefl:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    - name: green_crefl
    - name: C01
      modifiers: [sunz_corrected, rayleigh_corrected_crefl]
    standard_name: true_color

  true_color_raw:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C02
      modifiers: [sunz_corrected]
    - name: green_raw
    - name: C01
      modifiers: [sunz_corrected]
    standard_name: true_color

  true_color:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected]
    - name: green
    - name: C01
      modifiers: [sunz_corrected, rayleigh_corrected]
    standard_name: true_color

  natural_color:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C05
      modifiers: [sunz_corrected]
    - name: C03
      modifiers: [sunz_corrected]
    - name: C02
      modifiers: [sunz_corrected]
    high_resolution_band: blue
    standard_name: natural_color

  natural_color_raw:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C05
    - name: C03
    - name: C02
    standard_name: natural_color

  overview:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C02
      modifiers: [sunz_corrected]
    - name: C03
      modifiers: [sunz_corrected]
    - C14
    standard_name: overview

  overview_raw:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - C02
    - C03
    - C14
    standard_name: overview

  airmass:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
      - name: C08
      - name: C10
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C12
        - name: C13
    - name: C08
    standard_name: airmass

###
## Airmass using Channel14 RGB (own)
  airmass_eum:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
      - name: C08
      - name: C10
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C12
        - name: C14
    - name: C08
    standard_name: airmass

  night_microphysics:
    compositor: !!python/name:satpy.composites.Dust
    prerequisites:
    - name: C07
    - name: C14
    - name: C15
    standard_name: night_microphysics

  convection:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C08
        - name: C10
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C07
        - name: C14
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C05
        - name: C02
    standard_name: convection

## Cloud Phase Distinction or Day Cloud Phase (name from NASA SPORT) or Cloud Type RGB(name from EUMETSAT)
  cloud_phase_distinction_raw:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C13
    - name: C02
    - name: C05
    standard_name: cloud_phase_distinction

  cloud_phase_distinction:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C13
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected]
    - name: C05
      modifiers: [sunz_corrected]
    standard_name: cloud_phase_distinction

## Water Vapors RGB or Simple Water Vapor (name from NASA SPORT)
  water_vapors1:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C13
    - name: C08
    - name: C10
    standard_name: water_vapors1

## Water Vapors RGB (other version) or Differential Water Vapor (name from NASA SPORT)
  water_vapors2:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C10
        - name: C08
    - name: C10
    - name: C08
    standard_name: water_vapors2

## Day Cloud Phase RGB(name from EUMETSAT)
  cloud_phase_raw:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C05
    - name: C06
    - name: C02
    standard_name: natural

  cloud_phase:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C05
      modifiers: [sunz_corrected]
    - name: C06
      modifiers: [sunz_corrected]
    - name: C02
      modifiers: [sunz_corrected, rayleigh_corrected]
    standard_name: natural
##
  ir_overview:
    compositor: !!python/name:satpy.composites.SelfSharpenedRGB
    prerequisites:
    - name: C05
      modifiers: [co2_corrected]
    - name: C14
    - name: C15
    standard_name: ir_overview
## Tropical Airmass RGB (name from EUMETSAT)
  airmass_tropical:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C10
        - name: C08
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C13
        - name: C12
    - name: C08
    standard_name: airmass_tropical

## Ash, Dust and fog using RGB Dust recipe
  ash_abi:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C15
        - name: C13
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C14
        - name: C11
    - name: C13
    standard_name: ash

  dust_abi:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C15
        - name: C13
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C14
        - name: C11
    - name: C13
    standard_name: dust

  fog_abi:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C15
        - name: C13
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C14
        - name: C11
    - name: C13
    standard_name: fog
## CIRAâ€™s Natural Fire Color RGB (False color RGB)
  natural_fire:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C06
    - name: C03
      modifiers: [sunz_corrected]
    - name: C02
      modifiers: [sunz_corrected]
    standard_name: natural_fire

  natural_fire_2:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C07
        - name: C14
    - name: C03
      modifiers: [sunz_corrected]
    - name: C02
      modifiers: [sunz_corrected]
    standard_name: natural_fire
## Simple Fire & Smoke RGB by traditional bands (for WIS users)
  simple_fire_and_smoke:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C07
    - name: C02
    - name: C13
    standard_name: simple_fire_and_smoke
## Temperature RGBs (Aki version)
  fire_temperature_aki:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C07
    - name: C06
    - name: C05
    standard_name: fire_temperature_aki
## Temperature RGBs (Jochen version)
  fire_temperature_joche:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C07
    - name: C06
    - name: C05
    standard_name: fire_temperature_joche
## RGB composite for smoke haze
  smoke_haze:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C02
    - name: C03
    - name: C13
    standard_name: smoke_haze
## RGB composite for fire hotspots
  fire_hotspots:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C07
    - name: C06
    - name: C05
    standard_name: fire_hotspots

## Day Convection version 1 by traditional bands (for WIS* users)
  day_conv_v1:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C13
        - name: C08
    - name: C02
    - name: C13
    standard_name: day_conv_v1

## Day Convection version 2 by traditional bands (for WIS* users)
  day_conv_v2:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C13
        - name: C08
    - name: C02
    - name: C13
    standard_name: day_conv_v2
## Day Convection version 3 by traditional bands (for WIS* users) - (mid latitude, summer)
  day_conv_v3_midlat:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C02
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C13
        - name: C08
    - name: C13
    standard_name: day_conv_v3_midlat
## Day Convection version 3 by traditional bands (for WIS* users) - (Tropical area)
  day_conv_v3_tropcl:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C02
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C13
        - name: C08
    - name: C13
    standard_name: day_conv_v3_tropcl
## *WIS (WMO Information System)

## adapted from ahi.yalm
  day_microphysics_eum:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C03
      modifiers: [sunz_corrected]
    - name: C07
      modifiers: [nir_reflectance]
    - name: C14
    standard_name: day_microphysics
# Variations to the Day Microphysics RGB product using the 2.3 micron channel
  day_microphysics_abi:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C03
    - name: C06
    - name: C13
    standard_name: day_microphysics_ahi

## EUMETSAT
  snow:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C03
      modifiers: [sunz_corrected]
    - name: C05
      modifiers: [sunz_corrected]
    - name: C07
      modifiers: [nir_reflectance]
    standard_name: snow
## SO2
  volcanic_gas:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C09
        - name: C10
    - compositor: !!python/name:satpy.composites.DifferenceCompositor
      prerequisites:
        - name: C13
        - name: C11
    - name: C13
    standard_name: volcanic_gas

  fire_detection:
    compositor: !!python/name:satpy.composites.GenericCompositor
    prerequisites:
    - name: C02
    - name: C06
    - name: C14
standard_name: fire_detection
